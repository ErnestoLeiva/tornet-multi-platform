name: Publish to PyPI

on:
  push:
    branches:
      - main
    paths:
      - "src/tornet_mp/version.py"

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine requests

      - name: Read local version
        id: local
        run: |
          VERSION=$(python -c "import pathlib; ns = {}; exec(pathlib.Path('src/tornet_mp/version.py').read_text(), ns); print(ns['__version__'])")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Fetch current PyPI version
        id: pypi
        run: |
          INFO_URL="https://pypi.org/pypi/tornet-mp/json"
          PYPI_VERSION=$(curl -s $INFO_URL | python -c "import sys, json; print(json.load(sys.stdin)['info']['version'])")
          echo "pypi_version=$PYPI_VERSION" >> $GITHUB_OUTPUT

      - name: Compare versions
        id: check
        run: |
          echo "Local: ${{ steps.local.outputs.version }}"
          echo "PyPI:  ${{ steps.pypi.outputs.pypi_version }}"
          if [ "${{ steps.local.outputs.version }}" = "${{ steps.pypi.outputs.pypi_version }}" ]; then
            echo "Version already published to PyPI. Skipping upload."
            exit 0
          fi

      - name: Clean old builds
        run: |
          rm -rf build dist *.egg-info

      - name: Build
        run: |
          python -m build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m twine upload dist/*
