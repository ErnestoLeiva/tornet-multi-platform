name: Create GitHub Release

on:
  push:
    branches:
      - main
    paths:
      - "src/tornet_mp/version.py"
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Get version from version.py
        id: version
        run: |
          VERSION=$(python -c "import pathlib; ns={}; exec(pathlib.Path('src/tornet_mp/version.py').read_text(), ns); print(ns['__version__'])")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if tag already exists
        id: tag_check
        run: |
          TAG="v${{ steps.version.outputs.version }}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists, skipping release."
            exit 0
          fi

      - name: Create tag and push
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git tag "v${{ steps.version.outputs.version }}"
          git push origin "v${{ steps.version.outputs.version }}"

      - name: Build distribution
        run: |
          python -m pip install --upgrade build
          rm -rf dist build *.egg-info
          python -m build

      - name: Create GitHub Release with asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Release v${{ steps.version.outputs.version }}
          body: |
            Automated release for version v${{ steps.version.outputs.version }}
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}